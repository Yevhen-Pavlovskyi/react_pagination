{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","handleSetPage","event","preventDefault","page","Number","currentTarget","dataset","className","classNames","disabled","href","onClick","map","active","items","App","useState","setItemsPerPage","setPage","start","end","min","length","slicedItems","slice","id","onChange","target","value","htmlFor","newPage","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAE/BM,EAAgB,SAACC,GACrBA,EAAMC,iBAEN,IAAMC,EAAOC,OAAOH,EAAMI,cAAcC,QAAQX,aAE5CQ,EAAO,GAAKA,IAASR,GAAeQ,EAAON,GAI/CD,EAAaO,IAGf,OACE,qBAAII,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YAAa,CAAEC,SAA0B,IAAhBd,IAF7B,SAKE,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAK,QACL,oBAAmBf,EAAc,EACjC,gBAA+B,IAAhBA,EACfgB,QAASX,EANX,oBAWDd,EAAW,EAAGW,GAAYe,KAAI,SAACT,GAAD,OAC7B,oBAAII,UAAWC,IACb,YAAa,CAAEK,OAAQV,IAASR,IADlC,SAIE,mBACE,UAAQ,WACRY,UAAU,YACV,oBAAmBJ,EACnBO,KAAI,WAAMP,GACVQ,QAASX,EALX,SAOGG,SAIP,oBACEI,UAAWC,IACT,YAAa,CAAEC,SAAUd,IAAgBE,IAF7C,SAKE,mBACE,UAAQ,WACRU,UAAU,YACVG,KAAK,QACL,oBAAmBf,EAAc,EACjC,gBAAeA,IAAgBE,EAC/Bc,QAASX,EANX,wBC7DFc,EAAQ5B,EAHM,EACF,IAGf0B,KAAI,SAAAtB,GAAC,qBAAYA,MAEPyB,EAAgB,WAC3B,MAAmCC,mBAAS,GAA5C,mBAAOtB,EAAP,KAAgBuB,EAAhB,KACA,EAAwBD,mBAAS,GAAjC,mBAAOb,EAAP,KAAae,EAAb,KAEMC,GAAShB,EAAO,GAAKT,EAAU,EAC/B0B,EAAMtB,KAAKuB,IAAIlB,EAAOT,EAASoB,EAAMQ,QAWrCC,EAAcT,EAAMU,MAAML,EAAQ,EAAGC,GAE3C,OACE,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWJ,EADX,mBAC0BgB,EAD1B,cACqCC,EADrC,eAC+CN,EAAMQ,OADrD,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,SArBU,SAACzB,GACnBgB,GAAiBhB,EAAM0B,OAAOC,OAC9BV,EAAQ,IAoBAU,MAAOlC,EALT,UAOE,wBAAQkC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEd,MAAOqB,EAAMQ,OACb5B,QAASA,EACTC,YAAaQ,EACbP,aA5CmB,SAACkC,GACxBZ,EAAQY,MA6CN,6BACGP,EAAYX,KAAI,SAAAmB,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC/DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.00ce59e5.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const handleSetPage = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n\n    const page = Number(event.currentTarget.dataset.currentPage);\n\n    if (page < 1 || page === currentPage || page > totalPages) {\n      return;\n    }\n\n    onPageChange(page);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item', { disabled: currentPage === 1 },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          data-current-page={currentPage - 1}\n          aria-disabled={currentPage === 1}\n          onClick={handleSetPage}\n        >\n          «\n        </a>\n      </li>\n      {getNumbers(1, totalPages).map((page) => (\n        <li className={classNames(\n          'page-item', { active: page === currentPage },\n        )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            data-current-page={page}\n            href={`#${page}`}\n            onClick={handleSetPage}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li\n        className={classNames(\n          'page-item', { disabled: currentPage === totalPages },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          data-current-page={currentPage + 1}\n          aria-disabled={currentPage === totalPages}\n          onClick={handleSetPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst startNumber = 1;\nconst endNumber = 42;\n\nconst items = getNumbers(startNumber, endNumber)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setItemsPerPage] = useState(5);\n  const [page, setPage] = useState(1);\n\n  const start = (page - 1) * perPage + 1;\n  const end = Math.min(page * perPage, items.length);\n\n  const handlePageChange = (newPage: number) => {\n    setPage(newPage);\n  };\n\n  const hadleToPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setPage(1);\n  };\n\n  const slicedItems = items.slice(start - 1, end);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${start} - ${end} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={hadleToPage}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={page}\n        onPageChange={handlePageChange}\n      />\n      <ul>\n        {slicedItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}